# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  android: circleci/android@1.0.3

commands:
  pop:
    description: "Restore build and gradle cache"
    steps:
      - android/restore-gradle-cache
      - android/restore-build-cache
  push:
    description: "Create build and gradle cache"
    steps:
      - android/save-gradle-cache
      - android/save-build-cache
  issue-regex:
    description: "Extract Issue ID from branch name"
    parameters:
      branch:
        type: string
    steps:
      - run: echo << parameters.branch >> | grep -P '^(\d*?)(?=\-|_)' -o # digits until - or _

jobs:
  unit-test:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - pop
      - android/run-tests:
          test-command: ./gradlew test
      - push
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  android-test:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - pop
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedAndroidTest
          system-image: system-images;android-30;google_apis;x86
      - push
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  build:
    executor:
      name: android/android-machine
      resource-class: large
    parameters:
      task:
        type: string
      apkDir:
        type: string
      verCode:
        default: $CIRCLE_BUILD_NUM
        type: string
      verName:
        default: ""
        type: string
      verSuffix:
        default: ""
        type: string
    steps:
      - checkout
      - pop
      - run:
          name: Assemble release build
          command: |
            name=<< parameters.verName >>
            suffix=echo << parameters.verSuffix >> | grep -P '^(\d*?)(?=\-|_)' -o

            ./gradlew << parameters.task >> -PversionCode=<< parameters.verCode >> \
            ${name:+-PversionName=$name} \
            ${suffix:+-PversionSuffix=$suffix}
      - store_artifacts:
          path: app/build/outputs/apk/<< parameters.apkDir >>

workflows:
  buildReview:
    when:
      not:
        equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - unit-test
      - android-test
      - build:
          task: assembleReview
          apkDir: review
          verSuffix: << pipeline.git.branch >>
          requires:
            - unit-test
            - android-test
  buildSnapshot:
    when:
      equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - unit-test
      - android-test
      - build:
          task: assembleSnapshot
          apkDir: snapshot
          requires:
            - unit-test
            - android-test
  buildRelease:
    when:
      and:
        # Main branch + tag
        - << pipeline.git.tag >>
        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - unit-test
      - android-test
      - build:
          task: assembleRelease
          apkDir: release
          verName: << pipeline.git.tag >>
          requires:
            - unit-test
            - android-test